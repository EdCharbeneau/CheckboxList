@using CheckboxList.Component

<input type="color" @bind-value="@Color" @bind-value:event="oninput" />
<label for="noOfColumns">No of columns: </label><input id="noOfColumns" type="range" min="1" max="10" @bind-value="@NoOfColumns" @bind-value:event="oninput" />
<hr />

<Checkboxes Items="Data" Context="foo" TextField="@nameof(Foo.Name)" NoOfColumns="@NoOfColumns" @bind-SelectedItems="SelectedItems"
            style="@($"--item-color: {Color}")">
    <ItemTemplate>
        <div class="checkbox-list-item">
            <div class="checkbox-list-item__tickmark"></div>
            <div class="checkbox-list-item__name">
                @foo.Name
            </div>
        </div>
    </ItemTemplate>
</Checkboxes>

<hr />

<h3>Selected Items:</h3>
<ul>
    @foreach (Foo selected in SelectedItems)
    {
        <li>@selected.Id, @selected.Name @selected.Value</li>
    }
</ul>
@code {
    string Color { get; set; } = "#333";
    int NoOfColumns { get; set; } = 4;

    public record Foo(string Name, string Value, int Id);

    List<Foo> Data = new()
    {
        new("alpha", "red", 0),
        new("beta", "green", 1),
        new("gamma", "blue", 2),
        new("delta", "yellow", 3),
        new("aa", "red", 4),
        new("bb", "green", 5),
        new("cc", "blue", 6),
        new("ddd", "yellow", 7),
        new("ee", "red", 8),
        new("ff", "green", 9),
        new("gg", "blue", 10),
        new("hhh", "yellow", 11),
    };

    List<Foo> SelectedItems = new();
}